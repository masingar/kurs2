{
  "name": "engines",
  "version": "0.0.1",
  "description": "Template engine library for Assemble, based on consolidate.js.",
  "repository": {
    "type": "git",
    "url": "https://github.com/assemble/engines.git"
  },
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/assemble/engines/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "index.js",
  "devDependencies": {
    "atpl": "^0.7.7",
    "dot": "^1.0.2",
    "dust": "^0.3.0",
    "dustjs-helpers": "^1.2.0",
    "dustjs-linkedin": "^2.3.5",
    "eco": "^1.1.0-rc-3",
    "ect": "^0.5.9",
    "ejs": "^1.0.0",
    "haml-coffee": "^1.14.1",
    "hamljs": "^0.6.2",
    "handlebars": "^2.0.0-alpha.4",
    "hogan.js": "^2.0.0",
    "jade": "^1.3.1",
    "jazz": "0.0.18",
    "jqtpl": "1.1.0",
    "just": "^0.1.8",
    "liquor": "0.0.5",
    "lodash": "^2.4.1",
    "mocha": "^1.20.0",
    "mote": "^0.2.0",
    "mustache": "^0.8.1",
    "nunjucks": "^1.0.5",
    "qejs": "^3.0.5",
    "ractive": "^0.4.0",
    "should": "^4.0.0",
    "swig": "^1.3.2",
    "templayed": "^0.2.3",
    "toffee": "^0.1.10",
    "underscore": "^1.6.0",
    "walrus": "^0.10.1",
    "whiskers": "^0.3.3"
  },
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "compile",
    "engine",
    "process",
    "render",
    "template",
    "templates",
    "view"
  ],
  "readme": "# engines\n\n> Template engine consolidation library.\n\nThis is a fork of [consolidate.js](https://github.com/visionmedia/consolidate.js), modified\n\n## Installation\n\n```bash\n$ npm install engines\n```\n\n## Supported template engines\n\n- [atpl](https://github.com/soywiz/atpl.js)\n- [dust](https://github.com/akdubya/dustjs) [(website)](http://akdubya.github.com/dustjs/)\n- [eco](https://github.com/sstephenson/eco)\n- [ect](https://github.com/baryshev/ect) [(website)](http://ectjs.com/)\n- [ejs](https://github.com/visionmedia/ejs)\n- [haml](https://github.com/visionmedia/haml.js) [(website)](http://haml-lang.com/)\n- [haml-coffee](https://github.com/9elements/haml-coffee) [(website)](http://haml-lang.com/)\n- [handlebars](https://github.com/wycats/handlebars.js/) [(website)](http://handlebarsjs.com/)\n- [hogan](https://github.com/twitter/hogan.js) [(website)](http://twitter.github.com/hogan.js/)\n- [jade](https://github.com/visionmedia/jade) [(website)](http://jade-lang.com/)\n- [jazz](https://github.com/shinetech/jazz)\n- [jqtpl](https://github.com/kof/node-jqtpl) [(website)](http://api.jquery.com/category/plugins/templates/)\n- [JUST](https://github.com/baryshev/just)\n- [liquor](https://github.com/chjj/liquor)\n- [lodash](https://github.com/bestiejs/lodash) [(website)](http://lodash.com/)\n- [mustache](https://github.com/janl/mustache.js)\n- [QEJS](https://github.com/jepso/QEJS)\n- [ractive](https://github.com/Rich-Harris/Ractive)\n- [swig](https://github.com/paularmstrong/swig) [(website)](http://paularmstrong.github.com/swig/)\n- [templayed](http://archan937.github.com/templayed.js/)\n- [toffee](https://github.com/malgorithms/toffee)\n- [underscore](https://github.com/documentcloud/underscore) [(website)](http://documentcloud.github.com/underscore/)\n- [walrus](https://github.com/jeremyruppel/walrus) [(website)](http://documentup.com/jeremyruppel/walrus/)\n- [whiskers](https://github.com/gsf/whiskers.js)\n\n__NOTE__: you must still install the engines you wish to use, add them to your package.json dependencies.\n\n## API\n\nAll templates supported by this library may be rendered using the signature `(path[, context], callback)` as shown below, which is the same signature that Assemble supports, so any of these engines may be used within Assemble.\n\n__NOTE__: All this example code uses `engines.handlebars` for the [Handlebars](handlebarsjs.com) template engine. Replace handlebars with whatever template engine you prefer. For example, use `engines.hogan` for hogan.js, `engines.jade` for jade, etc.\n\nRun `console.log(engines)` for the full list of identifiers.\n\nExamples:\n\n```js\nvar engines = require('engines');\nengines.handlebars('templates/about.hbs', { title: 'About Us' }, function(err, html) {\n  if (err) { throw err; }\n  console.log(html);\n});\n```\n\nOr without options / local variables:\n\n```js\nvar engines = require('engines');\nengines.handlebars('templates/about.hbs', function(err, html) {\n  if (err) { throw err; }\n  console.log(html);\n});\n```\n\nTo dynamically pass the engine, use the subscript operator and a variable:\n\n```js\nvar engines = require('engines');\nvar name = 'handlebars';\n\nengines[name]('templates/about.hbs', { title: 'About Us' }, function(err, html) {\n  if (err) { throw err; }\n  console.log(html);\n});\n```\n\n## Caching\n\nTo enable caching pass `{ cache: true }`. Engines _may_ use this option to cache things reading the file contents, like compiled `Function`s etc. Engines which do _not_ support this may simply ignore it. All engines that **engines** implements I/O for will cache the file contents, this is ideal for production environments.\n\n```js\nvar engines = require('engines');\nengines.handlebars('templates/about.hbs', { title: 'About Us' }, function(err, html) {\n  if (err) { throw err; }\n  console.log(html);\n});\n```\n\n## Assemble > 0.6 example\n\n```js\nvar assemble = require('assemble')\n    engines = require('engines');\n\n// assign the handlebars engine to .hbs files\nassemble.engine('hbs', engines.handlebars);\n\n// assign the marked engine to .md files\nassemble.engine('md', engines.marked);\n\n// Run assemble\nassemble()\n  .src('templates/*.hbs')\n  .src('content/*.md')\n  .dest()\n\nassemble.build();\n```\n\n## Notes\n\n* You can pass **partials** with `options.partials`\n* For using **template inheritance** with nunjucks, you can pass a loader with `options.loader`.\n\n\n## Running tests\n\n  Install dev deps:\n\n    $ npm install -d\n\n\n## License\n\nCopyright (c) 2014 Jon Schlinkert, contributors.\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nReleased under the [MIT license](./LICENSE-MIT)",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/assemble/engines",
  "_id": "engines@0.0.1",
  "_shasum": "ff116e10f1a15f43e8bc85c21819ea988debcb33",
  "_from": "engines@",
  "_resolved": "https://registry.npmjs.org/engines/-/engines-0.0.1.tgz"
}
